<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mooneyserver.dublinpubs</groupId>
  <artifactId>rankings</artifactId>
  <packaging>pom</packaging>

  <version>1.0-SNAPSHOT</version>

  <modules>
    <module>aop</module>
    <module>rest</module>
    <module>ranking-engine</module>
    <module>internationalization</module>
    <module>metrics</module>
  </modules>

  <name>Dublin Pubs Rankings</name>

  <properties>
    <!-- Compiler Prefs -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <!-- Build Config -->
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Lib Version -->
    <log4j2.version>2.6.1</log4j2.version>
    <version.wildfly.swarm>1.0.0.Final</version.wildfly.swarm>
    <java.ee.version>7.0</java.ee.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.wildfly.swarm</groupId>
        <artifactId>bom</artifactId>
        <version>${version.wildfly.swarm}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>javax</groupId>
        <artifactId>javaee-api</artifactId>
        <version>${java.ee.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.16.10</version>
      </dependency>

      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>3.1.0</version>
      </dependency>

      <dependency>
        <groupId>com.mooneyserver.dublinpubs</groupId>
        <artifactId>ranking-engine</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>com.mooneyserver.dublinpubs</groupId>
        <artifactId>internationalization</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>com.mooneyserver.dublinpubs</groupId>
        <artifactId>aop</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>com.mooneyserver.dublinpubs</groupId>
        <artifactId>metrics</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>

    </dependencies>
  </dependencyManagement>


  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.wildfly.swarm</groupId>
          <artifactId>wildfly-swarm-plugin</artifactId>
          <version>${version.wildfly.swarm}</version>
        </plugin>

        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.15.16</version>

          <configuration>
            <logDate>default</logDate>
            <autoPull>true</autoPull>
            <images>
              <!-- Postgres Image is used 'as-is' and is linked into the service image -->
              <image>
                <alias>db</alias>
                <name>postgres:8</name>
                <run>
                  <wait>
                    <log>database system is ready to accept connections</log>
                    <time>20000</time>
                  </wait>
                  <log>
                    <prefix>DB</prefix>
                    <color>yellow</color>
                  </log>
                </run>
              </image>

              <!-- Image holding the artifact of this build -->
              <image>
                <!-- Alias name which can used for linking containers during runtime -->
                <alias>service</alias>
                <name>fabric8/${project.artifactId}-fabric8:${project.version}</name>

                <!-- ....................................... -->
                <!-- Build configuration for creating images -->
                <!-- ....................................... -->
                <build>
                  <from>java:8u40</from>
                  <!-- Assembly descriptor holds the reference to the created artifact-->
                  <assembly>
                    <!-- Normally, one would only use 'assembly.xml' if we could put the assembly descriptor
                         into src/main/docker But this confuses the alexec plugin, so we put it into another
                         directory and use an absolute pathe -->
                    <descriptor>${basedir}/src/main/fabric8/assembly.xml</descriptor>
                  </assembly>
                  <!-- Expose ports -->
                  <ports>
                    <port>8080</port>
                  </ports>
                  <!-- Default command for the build image -->
                  <cmd>java -Djava.security.egd=file:/dev/./urandom -jar /maven/shootout-docker-maven-fabric8.jar</cmd>
                </build>

                <!-- ............................................................... -->
                <!-- Runtime configuration for starting/stopping/linking containers -->
                <!-- ............................................................... -->
                <run>
                  <!-- Assign dynamically mapped ports to maven variables (which can be reused in integration tests) -->
                  <ports>
                    <port>tomcat.port:8080</port>
                  </ports>
                  <wait>
                    <!-- Check for this URL to return a 200 return code .... -->
                    <url>http://${docker.host.address}:${tomcat.port}/access</url>
                    <!-- ... but at max 10 seconds -->
                    <time>10000</time>
                  </wait>
                  <links>
                    <!-- Links can be referenced via alias (db) or name (postgres:9). If no link-alias (second "db")
                         is given it takes the first part (first "db") as link alias. So, <link>db</link> would be
                         enough here -->
                    <link>db:db</link>
                  </links>
                  <log>
                    <prefix>TC</prefix>
                    <color>cyan</color>
                  </log>
                </run>
              </image>
            </images>
          </configuration>

          <executions>
            <execution>
              <id>start</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>build</goal>
                <goal>start</goal>
              </goals>
            </execution>
            <execution>
              <id>stop</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>stop</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
