<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>rankings</artifactId>
    <groupId>com.mooneyserver.dublinpubs</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>rest</artifactId>
  <packaging>war</packaging>

  <dependencies>
    <!-- Java EE 7 dependency -->
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
    </dependency>

    <!-- Wildfly Swarm Fractions -->
    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>jaxrs-cdi</artifactId>
    </dependency>

    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>bean-validation</artifactId>
    </dependency>

    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>monitor</artifactId>
    </dependency>

    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>swagger</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>

    <dependency>
      <groupId>com.mooneyserver.dublinpubs</groupId>
      <artifactId>ranking-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>com.mooneyserver.dublinpubs</groupId>
      <artifactId>internationalization</artifactId>
    </dependency>
    <dependency>
      <groupId>com.mooneyserver.dublinpubs</groupId>
      <artifactId>aop</artifactId>
    </dependency>

    <!-- Test Deps -->
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.objenesis</groupId>
      <artifactId>objenesis</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-dmr</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>pub-ranker</finalName>

    <plugins>
      <plugin>
        <groupId>org.wildfly.swarm</groupId>
        <artifactId>wildfly-swarm-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>package</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>

          <configuration>
            <logDate>default</logDate>
            <autoPull>true</autoPull>
            <images>
              <image>
                <alias>db</alias>
                <name>postgres:8</name>
                <run>
                  <wait>
                    <log>database system is ready to accept connections</log>
                    <time>20000</time>
                  </wait>
                  <log>
                    <prefix>DB</prefix>
                    <color>green</color>
                  </log>
                </run>
              </image>

              <!-- Image holding the artifact of this build -->
              <image>
                <!-- Alias name which can used for linking containers during runtime -->
                <alias>service</alias>
                <name>dublinpubs/ranking-service:${project.version}</name>

                <!-- ....................................... -->
                <!-- Build configuration for creating images -->
                <!-- ....................................... -->
                <build>
                  <from>java:8u40</from>
                  <!-- Assembly descriptor holds the reference to the created artifact-->
                  <assembly>
                    <!-- Normally, one would only use 'assembly.xml' if we could put the assembly descriptor
                         into src/main/docker But this confuses the alexec plugin, so we put it into another
                         directory and use an absolute pathe -->
                    <descriptor>${project.basedir}/../docker/assembly.xml</descriptor>
                  </assembly>
                  <!-- Expose ports -->
                  <ports>
                    <port>8080</port>
                  </ports>
                  <!-- Default command for the build image -->
                  <cmd>java -jar /maven/ranking-svc.jar</cmd>
                </build>

                <!-- ............................................................... -->
                <!-- Runtime configuration for starting/stopping/linking containers -->
                <!-- ............................................................... -->
                <run>
                  <!-- Assign dynamically mapped ports to maven variables (which can be reused in integration tests) -->
                  <ports>
                    <port>wildfly.port:8080</port>
                  </ports>
                  <wait>
                    <!-- Check for this URL to return a 200 return code .... -->
                    <url>http://127.0.0.1:${wildfly.port}/rest/health</url>
                    <time>30000</time>
                  </wait>
                  <links>
                    <!-- Links can be referenced via alias (db) or name (postgres:9). If no link-alias (second "db")
                         is given it takes the first part (first "db") as link alias. So, <link>db</link> would be
                         enough here -->
                     <link>db:db</link>
                  </links>
                  <log>
                    <prefix>SVC</prefix>
                    <color>white</color>
                  </log>
                </run>
              </image>
            </images>
          </configuration>

          <executions>
            <execution>
              <id>start</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>build</goal>
                <goal>start</goal>
              </goals>
            </execution>
            <execution>
              <id>stop</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>stop</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
    </plugins>
  </build>
</project>